name: CI/CD Pipeline for Blog Application

on:
  push:
    branches: ["main"]

jobs:
  # --- CI: сборка и публикация образа ---
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/medianation-app:latest

  # --- CD: выкладка на сервер + smoke-тест ---
  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # гарантируем, что каталог на сервере существует (scp сам его не создаёт)
      - name: Ensure project dir exists
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          port: ${{ secrets.SERVER_PORT }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            mkdir -p "${{ vars.PROJECT_DIR }}"

      # копируем prod compose на сервер
      - name: Copy production compose via scp
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          port: ${{ secrets.SERVER_PORT }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "docker-compose.prod.yml"
          target: "${{ vars.PROJECT_DIR }}"

      # деплой + smoke-тест
      - name: Deploy via SSH
        uses: appleboy/ssh-action@v1.0.3
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          POSTGRES_DB:        ${{ vars.POSTGRES_DB }}
          POSTGRES_USER:      ${{ vars.POSTGRES_USER }}
          POSTGRES_PASSWORD:  ${{ secrets.POSTGRES_PASSWORD }}
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          port: ${{ secrets.SERVER_PORT }}
          key:  ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            set -e
            cd "${{ vars.PROJECT_DIR }}"
            mkdir -p logs/app logs/postgres

            # .env собираем на сервере из Secrets/Variables
            printf "%s\n" \
              "DOCKERHUB_USERNAME=${DOCKERHUB_USERNAME}" \
              "POSTGRES_DB=${POSTGRES_DB}" \
              "POSTGRES_USER=${POSTGRES_USER}" \
              "POSTGRES_PASSWORD=${POSTGRES_PASSWORD}" \
              > .env

            # тянем образ и поднимаем стек
            docker pull "${DOCKERHUB_USERNAME}/medianation-app:latest"
            docker compose -f docker-compose.prod.yml up -d

            # --- ПРОСТОЙ SMOKE-ТЕСТ ---
            # даём сервису стартануть и один раз проверяем /posts
            sleep 25
            docker run --rm --network host curlimages/curl:8.7.1 -f http://127.0.0.1:8080/posts
