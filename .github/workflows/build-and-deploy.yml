# Имя рабочего процесса, которое будет отображаться в GitHub Actions.
name: Build and Deploy Application

# Триггер: этот рабочий процесс будет запускаться автоматически при push в ветку 'main'.
on:
  push:
    branches: [ "main" ]

# Список задач, которые будут выполняться.
jobs:
  # Название задачи. В нашем случае она одна, но их может быть несколько.
  build-and-push:
    # Указываем, что задача должна выполняться на последней версии Ubuntu.
    runs-on: ubuntu-latest

    # Последовательность шагов, которые выполняются в рамках задачи.
    steps:
      # Шаг 1: Клонирование репозитория.
      # Этот экшен скачивает код из репозитория на виртуальную машину, где будет происходить сборка.
      - name: Checkout repository
        uses: actions/checkout@v3

      # Шаг 2: Авторизация в Docker Hub.
      # Используем секреты, чтобы безопасно войти в Docker Hub для последующей отправки образа.
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Шаг 3: Настройка Buildx.
      # Это экшен от Docker, который настраивает продвинутый сборщик образов.
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Шаг 4: Сборка и отправка Docker-образа.
      # Этот экшен собирает образ из нашего Dockerfile и отправляет его в Docker Hub.
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          # context: . указывает, что Dockerfile находится в корне репозитория.
          context: .
          # push: true говорит, что образ нужно не только собрать, но и отправить в registry.
          push: true
          # tags: задает имя и тег для нашего образа в формате 'имя_пользователя/имя_образа:тег'.
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/medianation-app:latest